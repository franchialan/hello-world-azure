name: Deploy Azure Web App

on:  
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    name: Compilação
    runs-on: ubuntu-latest

    steps:
    - name: Git Checkout
      uses: actions/checkout@v3
    - name: Configura JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Compilação
      run: mvn -B compile --file pom.xml
    
  # code-quality:
  #   name: Qualidade de Código
  #   needs: build
  #   runs-on: ubuntu-latest        
    
  #   steps:
  #   - name: Git Checkout
  #     uses: actions/checkout@v3
  #   - name: Adiciona permissão para mvnw
  #     run: chmod +x mvnw
  #   - name: Análise SonarCloud
  #     run: ./mvnw verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=teste-app-horusec
  #     env:
  #       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # horusec-security:
  #   name: Horusec Security
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Check out code
  #     uses: actions/checkout@v2
  #     with: # Necessário quando habilitado o autores de commit
  #       fetch-depth: 0
  #   - name: Running Horusec Security
  #     run: curl -fsSL https://raw.githubusercontent.com/ZupIT/horusec/main/deployments/scripts/install.sh | bash -s latest horusec start -p="./" -e="true"      
        
  tests:
    name: Testes automatizados
#     needs: code-quality
    runs-on: ubuntu-latest    
    
    steps:
    - name: Git Checkout
      uses: actions/checkout@v3
    - name: Configura JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Testes Unitários
      run: mvn -B test --file pom.xml
    
#   integration-tests:
#     name: Testes de Integração
#     needs: code-quality
#     runs-on: ubuntu-latest    
    
#     steps:
#     - name: Simula execução de testes integrados
#       run: echo Testes integrados executados com sucesso
      
#   mutation-tests:
#     name: Testes de Mutação
#     needs: code-quality
#     runs-on: ubuntu-latest    
    
#     steps:
#     - name: Simula execução de testes de mutação
#       run: echo Testes de mutação executados com sucesso      

#   regression-tests:
#     name: Testes de Regressão
#     needs: code-quality
#     runs-on: ubuntu-latest    
    
#     steps:
#     - name: Simula execução de testes de regressão
#       run: echo Testes de regressão executados com sucesso      

#   functional-tests:
#     name: Testes Funcionais
#     needs: code-quality
#     runs-on: ubuntu-latest    
    
#     steps:
#     - name: Simula execução de testes funcionais
#       run: echo Testes funcionais executados com sucesso         

  push-image:
    name: Login no Azure e Build 
#     needs: [tests,  integration-tests, mutation-tests, regression-tests, functional-tests]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - uses: azure/docker-login@v1
      with:
        login-server: crescer.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - run: |
        docker build . -t crescer.azurecr.io/nodecrescerteste:latest
        docker push crescer.azurecr.io/nodecrescerteste:latest     
  
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        app-name: 'crescer-app02'
        images: 'crescer.azurecr.io/nodecrescerteste:latest'
